// // import type { Metadata } from "next";
// // import localFont from "next/font/local";
// // import "./globals.css";
// // import Sidebar from "@/components/Sidebar";
// // import { SessionProvider } from "next-auth/react";
// // import { Analytics } from "@vercel/analytics/react"

// // const geistSans = localFont({
// //   src: "./fonts/GeistVF.woff",
// //   variable: "--font-geist-sans",
// //   weight: "100 900",
// // });
// // const geistMono = localFont({
// //   src: "./fonts/GeistMonoVF.woff",
// //   variable: "--font-geist-mono",
// //   weight: "100 900",
// // });

// // export const metadata: Metadata = {
// //   title: "GURU - WORK AI ASSISTANT",
// //   description: "Generated by create next app",
// // };

// // export default function RootLayout({
// //   children,
// // }: Readonly<{
// //   children: React.ReactNode;
// // }>) {
// //   return (
// //     <html lang="en">
// //       <body
// //         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
// //       >
// //         <Analytics/>
// //         {children}
            
// //       </body>
// //     </html>
// //   );
// // }


// // 'use client';

// // import type { Metadata } from "next";
// // import localFont from "next/font/local";
// // import "./globals.css";
// // import Sidebar from "@/components/Sidebar";
// // import { SessionProvider } from "next-auth/react";
// // import { Analytics } from "@vercel/analytics/react";
// // import { ThemeProvider } from 'next-themes';

// // const geistSans = localFont({
// //   src: "./fonts/GeistVF.woff",
// //   variable: "--font-geist-sans",
// //   weight: "100 900",
// // });

// // const geistMono = localFont({
// //   src: "./fonts/GeistMonoVF.woff",
// //   variable: "--font-geist-mono",
// //   weight: "100 900",
// // });

// // export const metadata: Metadata = {
// //   title: "GURU - WORK AI ASSISTANT",
// //   description: "Generated by create next app",
// // };

// // export default function RootLayout({
// //   children,
// // }: Readonly<{
// //   children: React.ReactNode;
// // }>) {
// //   return (
// //     <html lang="en" suppressHydrationWarning>
// //       <body
// //         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
// //       >
// //         <ThemeProvider
// //           attribute="class"
// //           defaultTheme="system"
// //           enableSystem
// //           disableTransitionOnChange
// //         >
// //           <Analytics />
// //           {children}
// //         </ThemeProvider>
// //       </body>
// //     </html>
// //   );
// // }




// import localFont from "next/font/local";
// import "./globals.css";
// import { metadata } from './metadata';
// import Sidebar from "@/components/Sidebar";
// import { Analytics } from "@vercel/analytics/react";
// import { ThemeProvider } from "./providers/theme-provider";

// const geistSans = localFont({
//   src: "./fonts/GeistVF.woff",
//   variable: "--font-geist-sans",
//   weight: "100 900",
// });

// const geistMono = localFont({
//   src: "./fonts/GeistMonoVF.woff",
//   variable: "--font-geist-mono",
//   weight: "100 900",
// });

// export { metadata };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en" suppressHydrationWarning>
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
//       >
//         <ThemeProvider
//           attribute="class"
//           defaultTheme="system"
//           enableSystem
//           disableTransitionOnChange
//         >
//           <Analytics />
//           {children}
//         </ThemeProvider>
//       </body>
//     </html>
//   );
// }



// import localFont from "next/font/local";
// import "./globals.css";
// import { metadata } from './metadata';
// import { Analytics } from "@vercel/analytics/react";
// import { Providers } from './providers';

// const geistSans = localFont({
//   src: "./fonts/GeistVF.woff",
//   variable: "--font-geist-sans",
//   weight: "100 900",
// });

// const geistMono = localFont({
//   src: "./fonts/GeistMonoVF.woff",
//   variable: "--font-geist-mono",
//   weight: "100 900",
// });

// export { metadata };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en" suppressHydrationWarning>
//       <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
//         <Providers>
//           <Analytics />
//           {children}
//         </Providers>
//       </body>
//     </html>
//   );
// }




// // app/layout.tsx
// import localFont from "next/font/local";
// import "./globals.css";
// import { metadata } from './metadata';
// import Sidebar from "@/components/Sidebar";
// import { Analytics } from "@vercel/analytics/react";
// import { ThemeProvider } from "./providers/theme-provider";
// import { SessionProvider } from "next-auth/react";

// const geistSans = localFont({
//   src: "./fonts/GeistVF.woff",
//   variable: "--font-geist-sans",
//   weight: "100 900",
// });

// const geistMono = localFont({
//   src: "./fonts/GeistMonoVF.woff",
//   variable: "--font-geist-mono",
//   weight: "100 900",
// });

// export { metadata };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en" suppressHydrationWarning>
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
//       >
//         <ThemeProvider
//           attribute="class"
//           defaultTheme="system"
//           enableSystem
//           disableTransitionOnChange
//         >
//           <Analytics />
//           <Sidebar />
//           {children}
//         </ThemeProvider>
//       </body>
//     </html>
//   );
// }


// // NEW 1223

// import localFont from "next/font/local";
// import "./globals.css";
// import { metadata } from './metadata';
// import Sidebar from "@/components/Sidebar";
// import { Analytics } from "@vercel/analytics/react";
// import { ThemeProvider } from "./providers/theme-provider";
// import { SessionProvider } from "next-auth/react";

// const geistSans = localFont({
//   src: "./fonts/GeistVF.woff",
//   variable: "--font-geist-sans",
//   weight: "100 900",
// });

// const geistMono = localFont({
//   src: "./fonts/GeistMonoVF.woff",
//   variable: "--font-geist-mono",
//   weight: "100 900",
// });

// export { metadata };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   return (
//     <html lang="en" suppressHydrationWarning>
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased`}
//       >
//         <ThemeProvider
//           attribute="class"
//           defaultTheme="system"
//           enableSystem
//           disableTransitionOnChange
//         >
//           {/* <div className="flex h-screen overflow-hidden">
//             <Sidebar />
//             <main className="flex-1 relative ml-20 transition-margin duration-300">
//               {children}
//             </main>
//           </div> */}
//           <div className="flex h-screen overflow-hidden">
//   <Sidebar />
//   {/* Update this main element's className */}
//   <main className="flex-1 relative ml-[80px] transition-all duration-300">
//     {children}
//   </main>
// </div>
//           <Analytics />
//         </ThemeProvider>
//       </body>
//     </html>
//   );
// }


//ORIGINAL LAYOUT 

import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import Sidebar from "@/components/Sidebar";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "GURU - WORK AI ASSISTANT",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        {children}
      </body>
    </html>
  );
}
